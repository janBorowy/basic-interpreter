lexer:
- test string literal ending " missing

parser:
gramatykę ogarnąć

"""
struct Circle {
    int radius
}

c = Circle(1);

if (a + b * (d() + 1) > 1 or a == 2) {

}

if (!(!true or false) and 2 + 2 == 1) {

}

if  ::= "if" "(" condition ")"

condition ::= conjunction { "and", conjunction }
conjunction ::= alternative { "or", alternative }
alternative ::= booleanLiteral
              | relation;
relation ::= expression [("==" | ">" | "<" | ">=" | "<=") expression]
expression ::= term {additiveOperator, term};
term ::= cast {mul cast};
cast :: = negation ["as" type];
negation ::= ["!"] factor;
factor ::= number | identifierOrFunctionCall {"." identifier} | "(" condition ")";
additiveOperator ::= "+";
identifierOrFunctionCall ::= identifier ["(" arguments ")"]
"""

mnie więcej jak tu

- kropka nie działa
- elementy drzewa to powinny być klasy, które dziedziczą i można zrobić płaskie drzewo
- powinno się zrobić drukarza i on by drukował te drzewa i do testów tego używać
- kill me